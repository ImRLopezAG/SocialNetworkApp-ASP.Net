// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SocialNet.Infrastructure.Persistence.Context;

#nullable disable

namespace SocialNet.Infrastructure.Persistence.Migrations {
  [DbContext(typeof(SocialNetContext))]
  partial class SocialNetContextModelSnapshot : ModelSnapshot {
    protected override void BuildModel(ModelBuilder modelBuilder) {
#pragma warning disable 612, 618
      modelBuilder
          .HasAnnotation("ProductVersion", "6.0.13")
          .HasAnnotation("Relational:MaxIdentifierLength", 128);

      SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

      modelBuilder.Entity("SocialNet.Core.Domain.Entities.Comment", b => {
        b.Property<int>("Id")
            .ValueGeneratedOnAdd()
            .HasColumnType("int");

        SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

        b.Property<string>("Content")
            .IsRequired()
            .HasMaxLength(300)
            .HasColumnType("nvarchar(300)");

        b.Property<DateTime>("CreatedAt")
            .HasColumnType("datetime2");

        b.Property<string>("CreatedBy")
            .HasColumnType("nvarchar(max)");

        b.Property<DateTime?>("LastModifiedAt")
            .HasColumnType("datetime2");

        b.Property<string>("LastModifiedBy")
            .HasColumnType("nvarchar(max)");

        b.Property<int>("PostId")
            .HasColumnType("int");

        b.Property<int>("UserId")
            .HasColumnType("int");

        b.HasKey("Id");

        b.HasIndex("PostId");

        b.HasIndex("UserId");

        b.ToTable("Comments", ( string )null);
      });

      modelBuilder.Entity("SocialNet.Core.Domain.Entities.Friend", b => {
        b.Property<int>("Id")
            .ValueGeneratedOnAdd()
            .HasColumnType("int");

        SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

        b.Property<DateTime>("CreatedAt")
            .HasColumnType("datetime2");

        b.Property<string>("CreatedBy")
            .HasColumnType("nvarchar(max)");

        b.Property<DateTime?>("LastModifiedAt")
            .HasColumnType("datetime2");

        b.Property<string>("LastModifiedBy")
            .HasColumnType("nvarchar(max)");

        b.Property<int>("ReceptorId")
            .HasColumnType("int");

        b.Property<int>("SenderId")
            .HasColumnType("int");

        b.HasKey("Id");

        b.HasIndex("SenderId");

        b.ToTable("Friends", ( string )null);
      });

      modelBuilder.Entity("SocialNet.Core.Domain.Entities.Post", b => {
        b.Property<int>("Id")
            .ValueGeneratedOnAdd()
            .HasColumnType("int");

        SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

        b.Property<string>("Content")
            .HasColumnType("nvarchar(max)");

        b.Property<DateTime>("CreatedAt")
            .HasColumnType("datetime2");

        b.Property<string>("CreatedBy")
            .HasColumnType("nvarchar(max)");

        b.Property<string>("Image")
            .HasColumnType("nvarchar(max)");

        b.Property<DateTime?>("LastModifiedAt")
            .HasColumnType("datetime2");

        b.Property<string>("LastModifiedBy")
            .HasColumnType("nvarchar(max)");

        b.Property<int>("UserId")
            .HasColumnType("int");

        b.HasKey("Id");

        b.HasIndex("UserId");

        b.ToTable("Posts", ( string )null);
      });

      modelBuilder.Entity("SocialNet.Core.Domain.Entities.User", b => {
        b.Property<int>("Id")
            .ValueGeneratedOnAdd()
            .HasColumnType("int");

        SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

        b.Property<DateTime>("CreatedAt")
            .HasColumnType("datetime2");

        b.Property<string>("CreatedBy")
            .HasColumnType("nvarchar(max)");

        b.Property<string>("Email")
            .IsRequired()
            .HasMaxLength(50)
            .HasColumnType("nvarchar(50)");

        b.Property<string>("Image")
            .HasColumnType("nvarchar(max)");

        b.Property<bool>("IsConfirmed")
            .HasColumnType("bit");

        b.Property<DateTime?>("LastModifiedAt")
            .HasColumnType("datetime2");

        b.Property<string>("LastModifiedBy")
            .HasColumnType("nvarchar(max)");

        b.Property<string>("LastName")
            .IsRequired()
            .HasMaxLength(50)
            .HasColumnType("nvarchar(50)");

        b.Property<string>("Name")
            .IsRequired()
            .HasMaxLength(50)
            .HasColumnType("nvarchar(50)");

        b.Property<string>("Password")
            .IsRequired()
            .HasColumnType("nvarchar(max)");

        b.Property<string>("Phone")
            .IsRequired()
            .HasColumnType("nvarchar(max)");

        b.Property<string>("UserName")
            .IsRequired()
            .HasColumnType("nvarchar(max)");

        b.HasKey("Id");

        b.ToTable("Users", ( string )null);
      });

      modelBuilder.Entity("SocialNet.Core.Domain.Entities.Comment", b => {
        b.HasOne("SocialNet.Core.Domain.Entities.Post", "Post")
            .WithMany("Comments")
            .HasForeignKey("PostId")
            .OnDelete(DeleteBehavior.Cascade)
            .IsRequired();

        b.HasOne("SocialNet.Core.Domain.Entities.User", "User")
            .WithMany("Comments")
            .HasForeignKey("UserId")
            .OnDelete(DeleteBehavior.NoAction)
            .IsRequired();

        b.Navigation("Post");

        b.Navigation("User");
      });

      modelBuilder.Entity("SocialNet.Core.Domain.Entities.Friend", b => {
        b.HasOne("SocialNet.Core.Domain.Entities.User", "Sender")
            .WithMany("Friends")
            .HasForeignKey("SenderId")
            .OnDelete(DeleteBehavior.Cascade)
            .IsRequired();

        b.Navigation("Sender");
      });

      modelBuilder.Entity("SocialNet.Core.Domain.Entities.Post", b => {
        b.HasOne("SocialNet.Core.Domain.Entities.User", "User")
            .WithMany("Posts")
            .HasForeignKey("UserId")
            .OnDelete(DeleteBehavior.Cascade)
            .IsRequired();

        b.Navigation("User");
      });

      modelBuilder.Entity("SocialNet.Core.Domain.Entities.Post", b => {
        b.Navigation("Comments");
      });

      modelBuilder.Entity("SocialNet.Core.Domain.Entities.User", b => {
        b.Navigation("Comments");

        b.Navigation("Friends");

        b.Navigation("Posts");
      });
#pragma warning restore 612, 618
    }
  }
}
